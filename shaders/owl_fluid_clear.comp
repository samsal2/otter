#version 450

layout(set = 0, binding = 0) uniform UBO {
  vec2 point;
  float radius;
  float aspect_ratio;

  vec2 sim_texel_size;
  vec2 dye_texel_size;

  vec4 color;

  float dt;
  float curl;
  float clear;
}
ubo;

/* this is set per dispatch invocation depending on the source dimensions */
layout(push_constant) uniform CONSTANTS { vec2 texel_size; }
constants;

layout(set = 1, binding = 0, rgba32f) uniform readonly image2D source0;
layout(set = 2, binding = 0, rgba32f) uniform readonly image2D source1;
layout(set = 3, binding = 0, rgba32f) uniform writeonly image2D destination0;

void main() {

  ivec2 uv_world;
  uv_world.x = int(gl_GlobalInvocationID.x + 1);
  uv_world.y = int(gl_GlobalInvocationID.y + 1);

  imageStore(destination0, uv_world, imageLoad(source0, uv_world) * ubo.clear);
}
